run:
  modules-download-mode: readonly
  timeout: 2m

linters:
  disable-all: true
  enable:
    # uber recommended begin
    - errcheck
    - goimports
    - revive # revive replacement of golint
    - govet
    - staticcheck
    # uber recommended end

    # golangci default begin
    - gosimple
    - ineffassign
    - unused
    # golangci default end

    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - containedctx
    - contextcheck
    # - cyclop
    - decorder
    # - depguard
    - dogsled
    # - dupl
    - dupword
    - durationcheck
    # - errchkjson
    - errname
    - errorlint
    # - execinquery
    - exhaustive
    - exhaustruct
    - exportloopref
    # - forbidigo
    # - forcetypeassert
    # - funlen
    - gci
    # - ginkgolinter
    - gocheckcompilerdirectives
    - gochecknoglobals
    - gochecknoinits
    # - gocognit
    - goconst
    - gocritic
    # - gocyclo
    - godot
    - godox
    # - goerr113
    - gofmt
    - gofumpt
    # - goheader
    # - gomnd
    # - gomoddirectives
    # - gomodguard
    - goprintffuncname
    - gosec
    # - gosmopolitan
    - grouper
    # - importas
    - interfacebloat
    - ireturn
    # - lll
    # - loggercheck
    - maintidx
    - makezero
    - misspell
    - musttag
    - nakedret
    - nestif
    - nilerr
    - nilnil
    # - nlreturn
    - noctx
    - nolintlint
    - nonamedreturns
    - paralleltest
    - prealloc
    - predeclared
    # - promlinter
    - reassign
    # - rowserrcheck
    # - sqlclosecheck
    - stylecheck
    - tagalign
    - tagliatelle
    - tenv
    - testableexamples
    - testpackage
    # - thelper
    # - tparallel
    - unconvert
    - unparam
    - usestdlibvars
    - varnamelen
    - wastedassign
    # - whitespace
    - wrapcheck
    - wsl
    - zerologlint

linters-settings:
  errcheck:
    check-type-assertions: true
    check-blank: true

  revive:
    enable-all-rules: true
    rules:
      - name: exported
        # disable: exported function Read should have comment or be unexported
        disabled: true
      - name: package-comments
        # disable: at least one file in a package should have a package comment
        disabled: true
      - name: banned-characters
        disabled: true
      - name: file-header
        disabled: true
      - name: function-length
        disabled: true
      - name: confusing-results
        disabled: true
      - name: use-any
        disabled: true
      - name: line-length-limit
        arguments: [99]
      - name: add-constant
        arguments:
          - allowInts: "0,99999"
            allowStrs: '""'
      - name: cognitive-complexity
        arguments: [10]
      - name: cyclomatic
        arguments: [10]
      - name: max-public-structs
        arguments: [1]
      - name: argument-limit
        arguments: [5]
      - name: function-result-limit
        arguments: [3]

  govet:
    enable-all: true

  staticcheck:
    checks:
      - 'all'

  gosimple:
    checks:
      - 'all'

  decorder:
    disable-dec-order-check: false

  dogsled:
    max-blank-identifiers: 1

  dupl:
    threshold: 100

  dupword:
    keywords:
      - 'the'
      - 'and'
      - 'a'

  errorlint:
    errorf: true
    asserts: true
    comparison: true

  exhaustruct:
    exclude:
      - '^net/http\.Client$'
      - '^github\.com/caarlos0/env/v(\d)\.Options$'

  goconst:
    min-len: 3
    min-occurrences: 2
    ignore-tests: true
    match-constant: true

  gocritic:
    enabled-tags:
      - diagnostic
      - style
      - performance
      - experimental
      - opinionated
    disabled-checks:
      - unnamedResult

  gofumpt:
    extra-rules: true

  interfacebloat:
    max: 5

  musttag:
    functions:
      # The full name of the function, including the package.
      - name: github.com/json-iterator/go.Marshal
        # The struct tag whose presence should be ensured.
        tag: json
        # The position of the argument to check.
        arg-pos: 0

  nestif:
    min-complexity: 4

  stylecheck:
    checks:
      - 'all'
      # disable: at least one file in a package should have a package comment
      - '-ST1000'

  tagalign:
    align: false
    sort: true
    order:
      - 'env'
      - 'envDefault'
      - 'json'
      - 'yaml'
      - 'yml'
      - 'toml'
      - 'mapstructure'
      - 'binding'
      - 'validate'
      - 'exhaustruct'

  usestdlibvars:
    http-method: true
    http-status-code: true
    time-weekday: true
    time-month: true
    time-layout: true
    crypto-hash: true
    default-rpc-path: true
    sql-isolation-level: true
    tls-signature-scheme: true
    constant-kind: true

  varnamelen:
    min-name-length: 2
    ignore-decls:
      - w http.ResponseWriter
      - r *http.Request
      - i int
      - j int

  wrapcheck:
    ignoreSigs:
      - .Errorf(
      - errors.New(
      - errors.Unwrap(
      - errors.Join(
      - .Wrap(
      - .Wrapf(
    ignorePackageGlobs:
      - 'google.golang.org/grpc/*'

issues:
  exclude-use-default: false
  max-issues-per-linter: 0
  max-same-issues: 0

  exclude-rules:
    - path: '(.+)_test\.go'
      linters:
        - govet
      text: 'fieldalignment'
    - path: '(.+)_test\.go'
      linters:
        - ireturn
    - path: '(.+)_test\.go'
      linters:
        - revive
      text: 'add-constant:'

  fix: true
